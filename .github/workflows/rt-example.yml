name: RT Build/Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [19.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      # JFrog platform url (for example: https://acme.jfrog.io)
      JF_URL: ${{ secrets.JF_URL }}
      JF_ENV_1: ${{ secrets.JF_ENV_1 }}
      # JFrog Platform access token
      JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
      JF_INSTANCE_NAME: ${{ vars.JF_REPO_NAME }}
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: 'Setup JFrog'
        uses: jfrog/setup-jfrog-cli@v3
      - run: jf npm install --legacy-peer-deps --build-name ${{ github.repository }} --build-number ${{ github.run_number }}
      - name: build
        run: npm run build --if-present
        env:
          CI: ""
      - name: Publish build
        run: |
          # Collect and store environment variables in the build-info
          jf rt build-collect-env ${{ github.repository }} ${{ github.run_number }}

          # Collect and store VCS details in the build-info
          jf rt build-add-git ${{ github.repository }} ${{ github.run_number }}

          # Publish the build-info to Artifactory
          jf rt build-publish ${{ github.repository }} ${{ github.run_number }}

          # Upload the dist files and tag the build info
          jf rt upload "dist/*" dupe-npm-dev-virtual --build-name ${{ github.repository }} --build-number ${{ github.run_number }}
